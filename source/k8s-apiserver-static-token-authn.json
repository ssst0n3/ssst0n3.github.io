{"matrix":[[],[{"ID":56,"CreatedAt":"2023-06-29T08:50:10.721Z","UpdatedAt":"2023-06-29T08:50:10.721Z","DeletedAt":null,"title":"k8s apiserver 用户认证：static token 认证 源码分析","function_declare":"","git_url":"","note":"","code":"","markdown":"# k8s apiserver 用户认证：static token 认证 源码分析","child":0,"next":57},{"ID":-1,"markdown":""},{"ID":-1,"markdown":""}],[{"ID":57,"CreatedAt":"2023-06-29T08:50:32.543Z","UpdatedAt":"2023-06-29T08:50:32.543Z","DeletedAt":null,"title":"","function_declare":"","git_url":"","note":"","code":"","markdown":"* 下一代源码分析：https://ssst0n3.github.io/source/#/static/source/k8s-apiserver-static-token-authn.json\n* 版本: v1.27.3\n* 源码地址：https://github.com/kubernetes/kubernetes/tree/v1.27.3\n* 入口： [func (a *Authenticator) AuthenticateRequest(req *http.Request) (*authenticator.Response, bool, error)](https://github.com/kubernetes/kubernetes/blob/v1.27.3/staging/src/k8s.io/apiserver/pkg/authentication/request/bearertoken/bearertoken.go#L42)","last":56,"child":0,"next":58},{"ID":-1,"markdown":""},{"ID":-1,"markdown":""}],[{"ID":58,"CreatedAt":"2023-06-29T08:50:54.238Z","UpdatedAt":"2023-06-29T08:50:54.238Z","DeletedAt":null,"title":"","function_declare":"","git_url":"","note":"","code":"","markdown":"## 1. 初始化\n\nhttps://github.com/kubernetes/kubernetes/blob/v1.27.3/pkg/kubeapiserver/authenticator/config.go#L124-L129\n\n```go\nfunc (config Config) New() (authenticator.Request, *spec.SecurityDefinitions, error) {\n    ...\n    if len(config.TokenAuthFile) > 0 {\n        tokenAuth, err := newAuthenticatorFromTokenFile(config.TokenAuthFile)\n        if err != nil {\n            return nil, nil, err\n        }\n        tokenAuthenticators = append(tokenAuthenticators, authenticator.WrapAudienceAgnosticToken(config.APIAudiences, tokenAuth))\n    }\n    ...\n}\n```","last":57,"child":60,"next":59},{"ID":60,"CreatedAt":"2023-06-29T08:51:16.756Z","UpdatedAt":"2023-06-29T08:51:16.756Z","DeletedAt":null,"title":"","function_declare":"","git_url":"","note":"","code":"","markdown":"从csv文件中读取token\n\nhttps://github.com/kubernetes/kubernetes/blob/v1.27.3/staging/src/k8s.io/apiserver/pkg/authentication/token/tokenfile/tokenfile.go#L45\n\n```go\nfunc New(auth authenticator.Token) *Authenticator {\n    return &Authenticator{auth}\n}\n\nfunc NewCSV(path string) (*TokenAuthenticator, error) {\n    file, err := os.Open(path)\n    if err != nil {\n        return nil, err\n    }\n    defer file.Close()\n\n    recordNum := 0\n    tokens := make(map[string]*user.DefaultInfo)\n    reader := csv.NewReader(file)\n    reader.FieldsPerRecord = -1\n    for {\n        record, err := reader.Read()\n        ...\n        recordNum++\n        if record[0] == \"\" {\n            klog.Warningf(\"empty token has been found in token file '%s', record number '%d'\", path, recordNum)\n            continue\n        }\n\n        obj := &user.DefaultInfo{\n            Name: record[1],\n            UID:  record[2],\n        }\n        if _, exist := tokens[record[0]]; exist {\n            klog.Warningf(\"duplicate token has been found in token file '%s', record number '%d'\", path, recordNum)\n        }\n        tokens[record[0]] = obj\n\n        if len(record) >= 4 {\n            obj.Groups = strings.Split(record[3], \",\")\n        }\n    }\n\n    return &TokenAuthenticator{\n        tokens: tokens,\n    }, nil\n}\n```","parent":58,"child":0,"next":0},{"ID":-1,"markdown":""}],[{"ID":59,"CreatedAt":"2023-06-29T08:51:05.411Z","UpdatedAt":"2023-06-29T08:51:33.807Z","DeletedAt":null,"title":"","function_declare":"","git_url":"","note":"","code":"","markdown":"## 2. 认证\n\n* 取 http 头中的 `Authorization` 字段\n* 取其中的token\n* 验证\n\nhttps://github.com/kubernetes/kubernetes/blob/v1.27.3/staging/src/k8s.io/apiserver/pkg/authentication/request/bearertoken/bearertoken.go#L42\n\n```go\nfunc (a *Authenticator) AuthenticateRequest(req *http.Request) (*authenticator.Response, bool, error) {\n\tauth := strings.TrimSpace(req.Header.Get(\"Authorization\"))\n\tif auth == \"\" {\n\t\treturn nil, false, nil\n\t}\n\tparts := strings.SplitN(auth, \" \", 3)\n\tif len(parts) < 2 || strings.ToLower(parts[0]) != \"bearer\" {\n\t\treturn nil, false, nil\n\t}\n\n\ttoken := parts[1]\n\n\t// Empty bearer tokens aren't valid\n\tif len(token) == 0 {\n\t\t// The space before the token case\n\t\tif len(parts) == 3 {\n\t\t\twarning.AddWarning(req.Context(), \"\", invalidTokenWithSpaceWarning)\n\t\t}\n\t\treturn nil, false, nil\n\t}\n\n\tresp, ok, err := a.auth.AuthenticateToken(req.Context(), token)\n\t// if we authenticated successfully, go ahead and remove the bearer token so that no one\n\t// is ever tempted to use it inside of the API server\n\tif ok {\n\t\treq.Header.Del(\"Authorization\")\n\t}\n\n\t// If the token authenticator didn't error, provide a default error\n\tif !ok && err == nil {\n\t\terr = invalidToken\n\t}\n\n\treturn resp, ok, err\n}\n```","last":58,"child":61,"next":0},{"ID":61,"CreatedAt":"2023-06-29T08:51:44.526Z","UpdatedAt":"2023-06-29T08:51:44.526Z","DeletedAt":null,"title":"","function_declare":"","git_url":"","note":"","code":"","markdown":"直接从maps中匹配，返回匹配到的用户。\n\nhttps://github.com/kubernetes/kubernetes/blob/v1.27.3/staging/src/k8s.io/apiserver/pkg/authentication/token/tokenfile/tokenfile.go#L93\n\n```go\nfunc (a *TokenAuthenticator) AuthenticateToken(ctx context.Context, value string) (*authenticator.Response, bool, error) {\n    user, ok := a.tokens[value]\n    if !ok {\n        return nil, false, nil\n    }\n    return &authenticator.Response{User: user}, true, nil\n}\n```","parent":59,"child":0,"next":0},{"ID":-1,"markdown":""}]],"toc":[{"nodeName":"H1","innerText":"k8s apiserver 用户认证：static token 认证 源码分析","id":"k8s-apiserver-用户认证：static-token-认证-源码分析"},{"nodeName":"H2","innerText":"1. 初始化","id":"1-初始化"},{"nodeName":"H2","innerText":"2. 认证","id":"2-认证"}]}